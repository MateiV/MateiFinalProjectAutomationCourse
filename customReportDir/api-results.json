{
  "stats": {
    "suites": 5,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-31T12:38:56.892Z",
    "end": "2023-05-31T12:38:59.581Z",
    "duration": 2689,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a92ef67e-5781-4a5a-b3f8-a821a59a5e65",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "485f117f-4bb2-4b3d-bd74-f2a6d780a7d6",
          "title": "Create new notes test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\create-new-note.test.js",
          "file": "\\api-tests\\create-new-note.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create new notes test suite\"",
              "fullTitle": "Create new notes test suite \"before all\" hook in \"Create new notes test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the CREATE NEW NOTE test suite\");",
              "err": {},
              "uuid": "a9c52eab-aaf4-4e85-929f-9f91614251b8",
              "parentUUID": "485f117f-4bb2-4b3d-bd74-f2a6d780a7d6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new work note test",
              "fullTitle": "Create new notes test suite create a new work note test",
              "timedOut": false,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  title: faker.animal.bear(),\n  description: faker.animal.bird(),\n  category: \"Work\",\n};\nawait spec()\n  .post(`${baseURL}/notes`)\n  .withHeaders(\n    \"x-auth-token\",\n    \"6a63b75236d844eba2d7644a44ce339b36fc3f68353a4a7ab72dfd5a3a9f103e\",\n    \"Content-Type\",\n    \"application/json\"\n  )\n  .withBody(requestBody)\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Note successfully created\");",
              "err": {},
              "uuid": "8ed023e2-471f-4184-a4c2-b6ba087ed729",
              "parentUUID": "485f117f-4bb2-4b3d-bd74-f2a6d780a7d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ed023e2-471f-4184-a4c2-b6ba087ed729"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e02a4b0f-ab70-4bdf-ad5c-98a4a7400c1b",
          "title": "Delete Note Endpoint Scenarios",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\delete-note.test.js",
          "file": "\\api-tests\\delete-note.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Note Endpoint Scenarios\"",
              "fullTitle": "Delete Note Endpoint Scenarios \"before all\" hook in \"Delete Note Endpoint Scenarios\"",
              "timedOut": false,
              "duration": 1043,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\n    console.log(\"Starting the execution of the DELETE Notes endpoint test suite\");\n    registerRequestBody = {\n      name: `${newUsername}`,\n      email: `${newEmail}`,\n      password: `${newPassword}`,\n    };\n    await spec()\n      .post(`${baseURL}/users/register`)\n      .withHeaders(\"Content-Type\", \"application/json\")\n      .withBody(registerRequestBody)\n    .expectBodyContains(\"User account created successfully\")\n    .expectStatus(201);\n    loginRequestBody = {\n      email: `${newEmail}`,\n      password: `${newPassword}`,\n    };\n    let login = await spec()\n      .post(`${baseURL}/users/login`)\n      .withHeaders(\"Content-Type\", \"application/json\")\n      .withBody(loginRequestBody)\n    .expectBodyContains(\"Login successful\")\n    .expectStatus(200);\n    authToken = login.body.data.token;\n    newNoteRequestBody = {\n      title: \"TestingTesting\",\n      description: \"Testing1234!\",\n      category: \"Work\",\n    };\n    \n    let newNote = await spec()\n      .post(`${baseURL}/notes`)\n      .withHeaders({\n        \"x-auth-token\": `${authToken}`,\n        \"Content-Type\": \"application/json\"})\n      .withBody(newNoteRequestBody)\n      .expectBodyContains(\"Note successfully created\")\n      .expectStatus(200);\n    createdNote = newNote.body.data.id;",
              "err": {},
              "uuid": "c9f7bf72-9c97-499b-b548-a2406eda7616",
              "parentUUID": "e02a4b0f-ab70-4bdf-ad5c-98a4a7400c1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete the previosuly created note test case",
              "fullTitle": "Delete Note Endpoint Scenarios Delete the previosuly created note test case",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requestBody = {\n  title: \"TestingTesting\",\n  description: \"Testing1234!\",\n  category: \"Work\",\n};\n\nawait spec()\n  .delete(`${baseURL}/notes/${createdNote}`)\n  .withHeaders({\n    \"x-auth-token\": `${authToken}`,\n    \"Content-Type\": \"application/json\"})\n  .expectBodyContains(\"Note successfully deleted\")\n  .expectStatus(200);",
              "err": {},
              "uuid": "a255a98d-c4c0-4cfb-8bed-2bf129960418",
              "parentUUID": "e02a4b0f-ab70-4bdf-ad5c-98a4a7400c1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a255a98d-c4c0-4cfb-8bed-2bf129960418"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c99aead7-e7ae-4dc0-8919-0c270ed91e2c",
          "title": "Get Notes test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\get-all-notes.test.js",
          "file": "\\api-tests\\get-all-notes.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get Notes test suite\"",
              "fullTitle": "Get Notes test suite \"before all\" hook in \"Get Notes test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the GET ALL NOTE test suite\");",
              "err": {},
              "uuid": "8edf7af9-983c-483e-ac0e-efdfd949c625",
              "parentUUID": "c99aead7-e7ae-4dc0-8919-0c270ed91e2c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all notes test",
              "fullTitle": "Get Notes test suite Get all notes test",
              "timedOut": false,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .get(`${baseURL}/notes`)\n  .withHeaders(\n    \"x-auth-token\",\n    \"6a63b75236d844eba2d7644a44ce339b36fc3f68353a4a7ab72dfd5a3a9f103e\",\n    \"Content-Type\",\n    \"application/json\"\n  )\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Notes successfully retrieved\")\n  .expectJsonSchema(getNotesSchema);",
              "err": {},
              "uuid": "f7e40dd1-f760-4f2c-be89-33411afb417d",
              "parentUUID": "c99aead7-e7ae-4dc0-8919-0c270ed91e2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7e40dd1-f760-4f2c-be89-33411afb417d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9fa3ccac-e465-4526-98ac-cc8735cc5f39",
          "title": "Login an existing user test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\login-user.test.js",
          "file": "\\api-tests\\login-user.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login an existing user test suite\"",
              "fullTitle": "Login an existing user test suite \"before all\" hook in \"Login an existing user test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the LOGIN test suite\");",
              "err": {},
              "uuid": "a91ce2e8-22c6-43e5-a917-16ca551d0325",
              "parentUUID": "9fa3ccac-e465-4526-98ac-cc8735cc5f39",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "login an existing user test",
              "fullTitle": "Login an existing user test suite login an existing user test",
              "timedOut": false,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: \"JohnTest\",\n  email: \"teste1r.test22@test.com\",\n  password: \"testing123451!\",\n};\nawait spec()\n  .post(`${baseURL}/users/login`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Login successful\");",
              "err": {},
              "uuid": "d6438604-e477-4f1d-892e-d566317c97fa",
              "parentUUID": "9fa3ccac-e465-4526-98ac-cc8735cc5f39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6438604-e477-4f1d-892e-d566317c97fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b39c7cf0-9828-43dc-ab02-a527b391def7",
          "title": "Register a new user test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\register-user.test.js",
          "file": "\\api-tests\\register-user.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Register a new user test suite\"",
              "fullTitle": "Register a new user test suite \"before all\" hook in \"Register a new user test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the REGISTER test suite\");",
              "err": {},
              "uuid": "9e7e34ad-40f0-4510-b237-56fa30fa1b86",
              "parentUUID": "b39c7cf0-9828-43dc-ab02-a527b391def7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "create new user test",
              "fullTitle": "Register a new user test suite create new user test",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: faker.internet.userName(),\n  email: faker.internet.email(),\n  password: faker.internet.password(),\n};\nawait spec()\n  .post(`${baseURL}/users/register`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(201)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"User account created\");",
              "err": {},
              "uuid": "323a0042-3d9e-4bcc-a800-51b55867869b",
              "parentUUID": "b39c7cf0-9828-43dc-ab02-a527b391def7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create new post test",
              "fullTitle": "Register a new user test suite create new post test",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  email: \"tester.test22@test.com\",\n  password: \"testing123451!\",\n};\nawait spec()\n  .post(`${baseURL}/users/register`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(400)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"User name must be between 4 and 30 characters\");",
              "err": {},
              "uuid": "10e7fcdf-7a6e-4cce-acbc-af7a60aee329",
              "parentUUID": "b39c7cf0-9828-43dc-ab02-a527b391def7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "323a0042-3d9e-4bcc-a800-51b55867869b",
            "10e7fcdf-7a6e-4cce-acbc-af7a60aee329"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 370,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "api-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportFilename": "api-results"
      },
      "version": "6.2.0"
    }
  }
}