{
  "stats": {
    "suites": 5,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-31T14:29:08.104Z",
    "end": "2023-05-31T14:29:10.673Z",
    "duration": 2569,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "92a92662-e267-45fa-9d9e-18aae7982a26",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dac5298f-3376-44bc-aaf5-11a238484183",
          "title": "Create new notes test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\create-new-note.test.js",
          "file": "\\api-tests\\create-new-note.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Create new notes test suite\"",
              "fullTitle": "Create new notes test suite \"before all\" hook in \"Create new notes test suite\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the CREATE NEW NOTE test suite\");",
              "err": {},
              "uuid": "4b356667-00b1-4dfa-a123-781cb13ba6bf",
              "parentUUID": "dac5298f-3376-44bc-aaf5-11a238484183",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new work note test",
              "fullTitle": "Create new notes test suite create a new work note test",
              "timedOut": false,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  title: faker.animal.bear(),\n  description: faker.animal.bird(),\n  category: \"Work\",\n};\nawait spec()\n  .post(`${baseURL}/notes`)\n  .withHeaders(\n    \"x-auth-token\",\n    \"6a63b75236d844eba2d7644a44ce339b36fc3f68353a4a7ab72dfd5a3a9f103e\",\n    \"Content-Type\",\n    \"application/json\"\n  )\n  .withBody(requestBody)\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Note successfully created\");",
              "err": {},
              "uuid": "1820392d-5321-44a5-a719-3ec3e4b1de92",
              "parentUUID": "dac5298f-3376-44bc-aaf5-11a238484183",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1820392d-5321-44a5-a719-3ec3e4b1de92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 361,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bceb9f4c-ec42-400e-9df3-abe04417ccf3",
          "title": "Delete Note Endpoint Scenarios",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\delete-note.test.js",
          "file": "\\api-tests\\delete-note.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Note Endpoint Scenarios\"",
              "fullTitle": "Delete Note Endpoint Scenarios \"before all\" hook in \"Delete Note Endpoint Scenarios\"",
              "timedOut": false,
              "duration": 997,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\n    console.log(\"Starting the execution of the DELETE Notes endpoint test suite\");\n    console.log(\"Registering a new user\");\n    const requestBody = {\n      name: newUsername,\n      email: newEmail,\n      password: newPassword,\n    };\n    \n    await spec()\n      .post(`${baseURL}/users/register`)\n      .withHeaders(\"Content-Type\", \"application/json\")\n      .withBody(requestBody)\n      .expectStatus(201)\n      .expectResponseTime(3000)\n      .expectBodyContains(\"User account created\");\n    console.log(\"Logging in with the new user\");\n    loginRequestBody = {\n      email: `${newEmail}`,\n      password: `${newPassword}`,\n    };\n    let login = await spec()\n      .post(`${baseURL}/users/login`)\n      .withHeaders(\"Content-Type\", \"application/json\")\n      .withBody(loginRequestBody)\n      .expectStatus(200)\n      .expectBodyContains(\"Login successful\");\n    \n    authToken = login.body.data.token;\n    console.log(\"Create a new work note\");\n    newNoteRequestBody = {\n      title: noteTitle,\n      description: noteDescription,\n      category: \"Work\",\n    };\n    \n    let newNote = await spec()\n      .post(`${baseURL}/notes`)\n      .withHeaders({\n        \"x-auth-token\": `${authToken}`,\n        \"Content-Type\": \"application/json\"})\n      .withBody(newNoteRequestBody)\n      .expectStatus(200)\n      .expectBodyContains(\"Note successfully created\");\n    createdNote = newNote.body.data.id;",
              "err": {},
              "uuid": "4a43d429-2cd7-4a53-b9e4-5a33a2664591",
              "parentUUID": "bceb9f4c-ec42-400e-9df3-abe04417ccf3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete the previosuly created note test case",
              "fullTitle": "Delete Note Endpoint Scenarios Delete the previosuly created note test case",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requestBody = {\n  title: noteTitle,\n  description: noteDescription,\n  category: \"Work\",\n};\n\nawait spec()\n  .delete(`${baseURL}/notes/${createdNote}`)\n  .withHeaders({\n    \"x-auth-token\": `${authToken}`,\n    \"Content-Type\": \"application/json\"})\n  .expectBodyContains(\"Note successfully deleted\")\n  .expectStatus(200);",
              "err": {},
              "uuid": "a3439d73-614e-46ba-b2bb-c5dec5bc3ac4",
              "parentUUID": "bceb9f4c-ec42-400e-9df3-abe04417ccf3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3439d73-614e-46ba-b2bb-c5dec5bc3ac4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3213c07b-c4ec-4cf7-b8b9-f3f284d649d1",
          "title": "Get Notes test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\get-all-notes.test.js",
          "file": "\\api-tests\\get-all-notes.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get Notes test suite\"",
              "fullTitle": "Get Notes test suite \"before all\" hook in \"Get Notes test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the GET ALL NOTE test suite\");",
              "err": {},
              "uuid": "545f09a7-eb1e-4669-ae3a-c39e00a054e3",
              "parentUUID": "3213c07b-c4ec-4cf7-b8b9-f3f284d649d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all notes test",
              "fullTitle": "Get Notes test suite Get all notes test",
              "timedOut": false,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .get(`${baseURL}/notes`)\n  .withHeaders(\n    \"x-auth-token\",\n    \"6a63b75236d844eba2d7644a44ce339b36fc3f68353a4a7ab72dfd5a3a9f103e\",\n    \"Content-Type\",\n    \"application/json\"\n  )\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Notes successfully retrieved\")\n  .expectJsonSchema(getNotesSchema);",
              "err": {},
              "uuid": "f1430a45-56b3-46ee-a878-4e2887d41488",
              "parentUUID": "3213c07b-c4ec-4cf7-b8b9-f3f284d649d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1430a45-56b3-46ee-a878-4e2887d41488"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dd9a1c35-5055-425d-91e7-685f80b948b9",
          "title": "Login an existing user test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\login-user.test.js",
          "file": "\\api-tests\\login-user.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login an existing user test suite\"",
              "fullTitle": "Login an existing user test suite \"before all\" hook in \"Login an existing user test suite\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the LOGIN test suite\");",
              "err": {},
              "uuid": "53c0bd3c-8d44-4c52-af37-28edfdd5e07e",
              "parentUUID": "dd9a1c35-5055-425d-91e7-685f80b948b9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "login an existing user test",
              "fullTitle": "Login an existing user test suite login an existing user test",
              "timedOut": false,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: \"JohnTest\",\n  email: \"teste1r.test22@test.com\",\n  password: \"testing123451!\",\n};\nawait spec()\n  .post(`${baseURL}/users/login`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(200)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"Login successful\");",
              "err": {},
              "uuid": "9bac028e-82f3-4bb8-810e-a724304a67d6",
              "parentUUID": "dd9a1c35-5055-425d-91e7-685f80b948b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bac028e-82f3-4bb8-810e-a724304a67d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ad6b3b9-7c10-4017-85e5-4bdf77e83ef0",
          "title": "Register a new user test suite",
          "fullFile": "C:\\Users\\vladm\\Desktop\\4mayo\\ProiectMateiV\\api-tests\\register-user.test.js",
          "file": "\\api-tests\\register-user.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Register a new user test suite\"",
              "fullTitle": "Register a new user test suite \"before all\" hook in \"Register a new user test suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.setDefaultTimeout(5000);\nconsole.log(\"Starting the execution of the REGISTER test suite\");",
              "err": {},
              "uuid": "c69cf156-46c5-45db-9071-4ba1458309a5",
              "parentUUID": "1ad6b3b9-7c10-4017-85e5-4bdf77e83ef0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "create new user test",
              "fullTitle": "Register a new user test suite create new user test",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: faker.internet.userName(),\n  email: faker.internet.email(),\n  password: faker.internet.password(),\n};\nawait spec()\n  .post(`${baseURL}/users/register`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(201)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"User account created\");",
              "err": {},
              "uuid": "61ad6191-0828-4d2f-8f46-5427199e2ff6",
              "parentUUID": "1ad6b3b9-7c10-4017-85e5-4bdf77e83ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user registration error test",
              "fullTitle": "Register a new user test suite user registration error test",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  email: \"tester.test22@test.com\",\n  password: \"testing123451!\",\n};\nawait spec()\n  .post(`${baseURL}/users/register`)\n  .withHeaders(\"Content-Type\", \"application/json\")\n  .withBody(requestBody)\n  .expectStatus(400)\n  .expectResponseTime(3000)\n  .expectBodyContains(\"User name must be between 4 and 30 characters\");",
              "err": {},
              "uuid": "df9ec967-7110-4864-8ff8-7e5680c3a9ee",
              "parentUUID": "1ad6b3b9-7c10-4017-85e5-4bdf77e83ef0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61ad6191-0828-4d2f-8f46-5427199e2ff6",
            "df9ec967-7110-4864-8ff8-7e5680c3a9ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "api-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportFilename": "api-results"
      },
      "version": "6.2.0"
    }
  }
}